@page "/employer/jobs"
@page "/employer/jobs/management"
@using JobBridge.Components.Common
@using JobBridge.Data
@using Microsoft.EntityFrameworkCore
@inject JobBridgeContext DbContext

<div class="job-management-container">
    <!-- Page Header -->
    <div class="page-header">
        <div class="header-content">
            <h1 class="page-title">Job Management</h1>
            <p class="page-subtitle">Manage your job postings and track their performance</p>
        </div>

        <div class="header-actions">
            <a href="/dashboard/employer" class="btn btn-secondary">
                Employer Dashboard
            </a>
            <a href="/employer/jobs/create" class="btn btn-primary">
                + Create New Job
            </a>
        </div>
    </div>

    <!-- Quick Stats -->
    <div class="stats-overview">
        <div class="stat-card">
            <div class="stat-icon">üìù</div>
            <div class="stat-content">
                <div class="stat-number">@jobPosts.Count(j => j.IsActive)</div>
                <div class="stat-label">Active Jobs</div>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-icon">üëÅÔ∏è</div>
            <div class="stat-content">
                <div class="stat-number">8,456</div>
                <div class="stat-label">Total Views</div>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-icon">üìÑ</div>
            <div class="stat-content">
                <div class="stat-number">234</div>
                <div class="stat-label">Applications</div>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-icon">üìà</div>
            <div class="stat-content">
                <div class="stat-number">15%</div>
                <div class="stat-label">Avg. Apply Rate</div>
            </div>
        </div>
    </div>

    <!-- Filters and Search -->
    <div class="management-controls">
        <div class="search-filters">
            <div class="search-input-wrapper">
                <input type="text" class="search-input" placeholder="Search your jobs..." />
                <span class="search-icon">üîç</span>
            </div>

            <div class="filter-dropdown">
                <select class="filter-select">
                    <option value="all">All Jobs</option>
                    <option value="active">Active</option>
                    <option value="paused">Paused</option>
                    <option value="expired">Expired</option>
                    <option value="draft">Draft</option>
                </select>
            </div>

            <div class="filter-dropdown">
                <select class="filter-select">
                    <option value="all">All Departments</option>
                    <option value="engineering">Engineering</option>
                    <option value="product">Product</option>
                    <option value="design">Design</option>
                    <option value="marketing">Marketing</option>
                </select>
            </div>
        </div>

        <div class="view-controls">
            <div class="sort-dropdown">
                <select class="sort-select">
                    <option value="newest">Newest First</option>
                    <option value="oldest">Oldest First</option>
                    <option value="most-views">Most Views</option>
                    <option value="most-applications">Most Applications</option>
                </select>
            </div>

            <div class="view-toggle">
                <button class="view-btn active">Grid</button>
                <button class="view-btn">List</button>
            </div>
        </div>
    </div>

    <!-- Jobs Grid -->
    <div class="jobs-grid">
        @foreach (var jobPost in jobPosts)
        {
            <div class="job-management-card">
                <div class="job-status-indicator active"></div>

                <div class="job-card-header">
                    <div class="job-basic-info">
                        <h3 class="job-card-title">@jobPost.JobTitle</h3>
                        <p class="job-card-department">@jobPost.Department</p>
                        <div class="job-card-meta">
                            <span class="meta-item">@jobPost.EmploymentType</span>
                            <span class="meta-separator">‚Ä¢</span>
                            <span class="meta-item">@jobPost.Location</span>
                            <span class="meta-separator">‚Ä¢</span>
                            <span class="meta-item">Posted on @jobPost.PostedDate.ToString("MMMM dd, yyyy")</span>
                        </div>
                    </div>
                </div>
                <div class="job-card-footer">
                    <div class="status-badges">
                        @if (jobPost.IsUrgent)
                        {
                            <span class="status-badge">Urgent</span>
                        }
                        @if (jobPost.IsFeatured)
                        {
                            <span class="feature-badge">Featured</span>
                        }
                    </div>

                    <div class="quick-actions">
                        <button class="btn btn-sm btn-toggle @(jobPost.IsActive ? "active" : "")"
                            @onclick="() => ToggleJobStatus(jobPost.Id)">
                            @(jobPost.IsActive ? "Active" : "Inactive")
                        </button>
                        <a href="/employer/jobs/edit/@jobPost.Id" class="btn btn-primary btn-sm">Edit</a>
                        <button class="btn btn-danger btn-sm" @onclick="() => HandleDelete(jobPost.Id)">Delete</button>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Empty State (hidden when there are jobs) -->
    <div class="empty-state" style="display: none;">
        <div class="empty-icon">üìù</div>
        <h3 class="empty-title">No Job Postings Yet</h3>
        <p class="empty-description">Create your first job posting to start attracting top talent</p>
        <a href="/employer/jobs/create" class="btn btn-primary">Create Your First Job</a>
    </div>
</div>

@code {
    private List<JobPost> jobPosts = new();
    private string? errorMessage = null;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            jobPosts = await DbContext.JobPosts
            .ToListAsync();
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to load job listings: {ex.Message}";
        }

        // Load employer's jobs when data layer is ready
        await Task.CompletedTask;
    }

    private async Task ToggleJobStatus(int jobId)
    {
        var job = jobPosts?.FirstOrDefault(j => j.Id == jobId);
        if (job != null)
        {
            job.IsActive = !job.IsActive;
        }
        // Update the job status in the database
        DbContext.JobPosts.Update(job);
        await DbContext.SaveChangesAsync();
        StateHasChanged();
    }

    private async Task HandleDelete(int jobPostId)
    {
        var jobToRemove = jobPosts.FirstOrDefault(j => j.Id == jobPostId);
        if (jobToRemove != null)
        {
            jobPosts.Remove(jobToRemove);
            DbContext.JobPosts.Remove(jobToRemove);
            await DbContext.SaveChangesAsync();
            StateHasChanged();
        }
    }
}